<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE ViewObject SYSTEM "jbo_03_01.dtd">

<ViewObject
   Name="ListaHistBaixas"
   OrderBy="num_boletim desc, data_inicio desc"
   BindingStyle="OracleName"
   CustomQuery="true"
   RowClass="ora.pt.cons.igif.sics.baixas.ListaHistBaixasRowImpl"
   ComponentClass="ora.pt.cons.igif.sics.baixas.ListaHistBaixasImpl"
   MsgBundleClass="ora.pt.cons.igif.sics.baixas.common.ListaHistBaixasRowImplMsgBundle"
   UseGlueCode="false" >
   <DesignTime>
      <Attr Name="_isCodegen" Value="true" />
      <Attr Name="_isExpertMode" Value="true" />
      <Attr Name="_version" Value="10.1.3.39.84" />
      <Attr Name="_codeGenFlag2" Value="Access|Coll|Msg|VarAccess" />
   </DesignTime>
   <Variable
      Name="idUtente"
      Kind="where"
      Type="java.lang.String" >
   </Variable>
   <SQLQuery><![CDATA[
select 
       -- ID BAIXA
       gib.id as id,
       
       -- NUM BOLETIM
       gib.num_boletim as num_boletim,
       
       -- DATA INICIO
      (select max(git.data_inicio)
         from git_items_baixas git
        where git_baixas_id = gib.id
          and git.anulado   <> 'S'
      ) as data_inicio ,
      
      -- DATA INICIO TOTAL
      case when 
          -- se existirem registos activos de items baixa
          (select 1 
            from git_items_baixas git
            where git_baixas_id =  gib.id
              and git.anulado   <> 'S'
              and rownum = 1
          ) = 1 then (
                select min(git.data_inicio)
                  from git_items_baixas git
                 where git_baixas_id = gib.id
                   and git.anulado   <> 'S'
          )
       -- caso contrario
       else (   
          select min(git.data_inicio)
            from git_items_baixas git
           where git_baixas_id = gib.id
             and git.anulado   = 'S'
       ) end as data_inicio_total,
      
      -- DATA TERMO
      (select max(git.data_termo)
        from git_items_baixas git
       where git_baixas_id = gib.id
         and git.anulado   <> 'S'
      ) as data_termo,
                              
      -- COD TIPO REGISTO
      case when 
          -- se existirem registos activos de items baixa
          (select 1 
            from git_items_baixas git
            where git_baixas_id =  gib.id
              and git.anulado   <> 'S'
              and rownum = 1
          ) = 1 then (
               select cod.codigo
                 from sys_cod_genericos cod
                    , git_items_baixas   git
                where cod.id = git.scg_tiporegisto_id
                  and git.git_baixas_id = gib.id
                  and git.anulado       <> 'S'
                  and rownum = 1
                  and git.DATA_INICIO = (select max(git.DATA_INICIO)
                                    from   git_items_baixas git
                                    where  git_baixas_id = gib.id 
                                      and git.anulado    <> 'S')
          )
       -- caso contrario
       else (   
              select cod.codigo
               from sys_cod_genericos cod
                  , git_items_baixas   git
              where cod.id = git.scg_tiporegisto_id
                and git.git_baixas_id = gib.id
                and git.anulado       = 'S'
                and rownum = 1
                and git.DATA_INICIO = (select max(git.DATA_INICIO)
                                  from   git_items_baixas git
                                  where  git_baixas_id = gib.id 
                                    and git.anulado    = 'S')       
      ) end as CodTipoRegisto,
       
      -- TIPO REGISTO                        
      case when 
          -- se existirem registos activos de items baixa
          (select 1 
            from git_items_baixas git
            where git_baixas_id =  gib.id
              and git.anulado   <> 'S'
              and rownum = 1
          ) = 1 then (
               select cod.descricao
                 from sys_cod_genericos cod
                    , git_items_baixas   git
                where cod.id = git.scg_tiporegisto_id
                  and git.git_baixas_id = gib.id
                  and git.anulado       <> 'S'
                  and rownum = 1
                  and git.DATA_INICIO = (select max(git.DATA_INICIO)
                                    from   git_items_baixas git
                                    where  git_baixas_id = gib.id 
                                      and git.anulado    <> 'S')
          )
       -- caso contrario
       else (   
              select cod.descricao
               from sys_cod_genericos cod
                  , git_items_baixas   git
              where cod.id = git.scg_tiporegisto_id
                and git.git_baixas_id = gib.id
                and git.anulado       = 'S'
                and rownum = 1
                and git.DATA_INICIO = (select max(git.DATA_INICIO)
                                  from   git_items_baixas git
                                  where  git_baixas_id = gib.id 
                                    and git.anulado    = 'S')       
      ) end as TipoRegisto,
                              
     -- ENTIDADE                         
     case when 
          -- se existirem registos activos de items baixa
          (select 1 
            from git_items_baixas git
            where git_baixas_id =  gib.id
              and git.anulado   <> 'S'
              and rownum = 1
          ) = 1 then (
                      select sen.designacao 
                        from git_items_baixas  git,
                             sys_entidades    sen
                       where git.sys_entidades_id       = sen.id
                         and git.git_baixas_id          = gib.id
                         and git.anulado                <> 'S'
                         and rownum = 1
                         and git.DATA_INICIO = (select max(git.DATA_INICIO)  
                                                    from git_items_baixas git
                                                   where git.git_baixas_id = gib.id 
                                                     and git.anulado       <> 'S')  
          )
       -- caso contrario
       else (   
                        select sen.designacao 
                          from git_items_baixas  git,
                               sys_entidades    sen
                         where git.sys_entidades_id       = sen.id
                           and git.git_baixas_id          = gib.id
                           and git.anulado                = 'S'
                           and rownum = 1
                           and git.DATA_INICIO = (select max(git.DATA_INICIO)  
                                                      from git_items_baixas git
                                                     where git.git_baixas_id = gib.id 
                                                       and git.anulado       = 'S')     
      ) end as Entidade,
     
     -- PROFISSIONAL
     case when 
          -- se existirem registos activos de items baixa
          (select 1 
            from git_items_baixas git
            where git_baixas_id =  gib.id
              and git.anulado   <> 'S'
              and rownum = 1
          ) = 1 then (
                      select pro_ps.nomeclin 
                        from git_items_baixas  git,
                             pro_profissid     pro,
                             pro_profissid_pessoal pro_ps
                       where git.PRO_PROFISSID_ID       = pro.id
                         and git.git_baixas_id          = gib.ID
                         AND pro_ps.ID                  = pro.pro_profissid_pessoal_id
                         and git.anulado                <> 'S'
                         and rownum = 1
                         and git.DATA_INICIO = (select max(git.DATA_INICIO)  
                                                    from git_items_baixas    git
                                                   where git.git_baixas_id      = gib.id 
                                                     and git.anulado            <> 'S')  
          )
       -- caso contrario
       else (   
                        select pro_ps.nomeclin 
                          from git_items_baixas  git,
                               pro_profissid     pro,
                               pro_profissid_pessoal pro_ps
                         where git.PRO_PROFISSID_ID       = pro.id
                           and git.git_baixas_id          = gib.ID
                           AND pro_ps.ID                  = pro.pro_profissid_pessoal_id
                           and git.anulado                = 'S'
                           and rownum = 1
                           and git.DATA_INICIO = (select max(git.DATA_INICIO)  
                                                      from git_items_baixas    git
                                                     where git.git_baixas_id      = gib.id 
                                                       and git.anulado            = 'S')      
      ) end as Profissional,
     
     -- DATA ALTA
     case when 
          -- se existirem registos activos de items baixa
          (select 1 
            from git_items_baixas git
            where git_baixas_id =  gib.id
              and git.anulado   <> 'S'
              and rownum = 1
          ) = 1 then (
                select max(git.data_inicio)
                  from git_items_baixas    git
                     , sys_cod_genericos   scg
                 where git.git_baixas_id          = gib.id
                   and git.scg_tiporegisto_id     = scg.id
                   and scg.codigo                 = 'A' 
                   and git.anulado                <> 'S'
          )
       -- caso contrario
       else (   
          select max(git.data_inicio)
          from git_items_baixas    git
             , sys_cod_genericos   scg
         where git.git_baixas_id          = gib.id
           and git.scg_tiporegisto_id     = scg.id
           and scg.codigo                 = 'A' 
           and git.anulado                = 'S'
       ) end as DataAlta,
         
     -- MOTIVO ALTA 
     (select scg.descricao
        from git_items_baixas    git
           , sys_cod_genericos   scg
       where git.git_baixas_id          = gib.id
         and git.scg_tipoalta_id        = scg.id
         and git.anulado                <> 'S'
         and rownum = 1
         and git.DATA_INICIO            = (select max(git.DATA_INICIO)
                                             from git_items_baixas  git
                                            where git.GIT_BAIXAS_ID         = gib.id 
                                              and git.anulado               <> 'S')) as MotivoAlta,
                                              
     -- ANTIGO ID CLASS DOENCA
     gib.idu_ident_ut_id as idu_ident_ut_id,
     (select git.scg_classifdoenca_id
        from git_items_baixas    git
       where git.git_baixas_id          = gib.id
         and git.anulado                <> 'S'
         and rownum = 1
         and git.DATA_INICIO            = (select max(git.DATA_INICIO)
                                             from git_items_baixas  git
                                            where git.GIT_BAIXAS_ID         = gib.id 
                                              and git.anulado               <> 'S')) as AnteriorIdclassifdoenca,
      
      -- ID COD ASSISTENCIA FAMILIAR
      (select scg.id
         from sys_cod_genericos scg
            , sys_tipos_codigos stc
        where scg.codigo                = 'DF'  
          and scg.sys_tipos_codigos_id  = stc.id
          and stc.cod_tipo              = 'GCLD') as IdCodAssistenciaFamiliar,
          
      -- ID PARENTESCO ANTERIOR   
      (select git.scg_parentesco_id
        from git_items_baixas    git
       where git.git_baixas_id          = gib.id
         and git.anulado                <> 'S'
         and rownum = 1
         and git.DATA_INICIO            = (select max(git.DATA_INICIO)
                                             from git_items_baixas  git
                                            where git.GIT_BAIXAS_ID         = gib.id 
                                              and git.anulado               <> 'S')) as AnteriorIdParentesco,
                                              
       -- NOME FAMILIAR ANTERIOR
       (select git.nome_familiar
        from git_items_baixas    git
       where git.git_baixas_id          = gib.id
         and git.anulado                <> 'S'
         and rownum = 1
         and git.DATA_INICIO            = (select max(git.DATA_INICIO)
                                             from git_items_baixas  git
                                            where git.GIT_BAIXAS_ID         = gib.id 
                                              and git.anulado               <> 'S')) as AnteriorNomeFamiliar,
      
       -- ID ULTIMA BAIXA
       (select git.id
        from git_items_baixas    git
       where git.git_baixas_id          = gib.id
         and git.anulado                <> 'S'
         and rownum = 1
         and git.DATA_INICIO            = (select max(git.DATA_INICIO)
                                             from git_items_baixas  git
                                            where git.GIT_BAIXAS_ID         = gib.id 
                                              and git.anulado               <> 'S')) as idLastItemBaixa,
       
       -- ID HISTORICO
       hist.id as histID,
       
       -- CODIGO ENTIDADE PUB
       nvl(scg.codigo, 'ERES') as codigoEntidadePub,
       
       -- ESTADO
       case when
          ( select 1 
            from git_items_baixas git
            where git_baixas_id    = gib.id
            and (  exists ( select 1 
                                  from git_items_baixas git 
                                 where git_baixas_id = gib.id 
				   and git.anulado = 'N'
                               )
		   or not exists ( select 1 
                                     from git_items_baixas git 
                                    where git_baixas_id = gib.id 
                                  ) 
                ) and ROWNUM <= 1
          ) = 1 then 'N'
       else 'S' end Estado
     from git_baixas        gib
        , idu_hist_ent_ut   hist
        , sys_entidades     sen
        , sys_cod_genericos scg
     where gib.idu_ident_ut_id          = :idUtente
       and gib.idu_hist_ent_ut_id       = hist.id(+)
       and hist.sys_entidades_resp_id   = sen.id(+)
       and sen.sys_subtipo_entidades_id = scg.id(+)
   ]]></SQLQuery>
   <ViewAttribute
      Name="Id"
      IsUpdateable="false"
      IsPersistent="false"
      IsNotNull="true"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="ID"
      Expression="ID"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="NumBoletim"
      IsUpdateable="false"
      IsPersistent="false"
      IsNotNull="true"
      Precision="15"
      Scale="0"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="NUM_BOLETIM"
      Expression="NUM_BOLETIM"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="DataInicio"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Date"
      ColumnType="DATE"
      AliasName="DATA_INICIO"
      Expression="DATA_INICIO"
      SQLType="DATE" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="7" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="DataInicioTotal"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Date"
      ColumnType="DATE"
      AliasName="DATA_INICIO_TOTAL"
      Expression="DATA_INICIO_TOTAL"
      SQLType="DATE" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="7" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="DataTermo"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Date"
      ColumnType="DATE"
      AliasName="DATA_TERMO"
      Expression="DATA_TERMO"
      SQLType="DATE" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="7" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Codtiporegisto"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="50"
      Type="java.lang.String"
      ColumnType="VARCHAR2"
      AliasName="CODTIPOREGISTO"
      Expression="CODTIPOREGISTO"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="50" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Tiporegisto"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="130"
      Type="java.lang.String"
      ColumnType="VARCHAR2"
      AliasName="TIPOREGISTO"
      Expression="TIPOREGISTO"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="130" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Entidade"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="100"
      Type="java.lang.String"
      ColumnType="VARCHAR2"
      AliasName="ENTIDADE"
      Expression="ENTIDADE"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="100" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Profissional"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="20"
      Type="java.lang.String"
      ColumnType="VARCHAR2"
      AliasName="PROFISSIONAL"
      Expression="PROFISSIONAL"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="20" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Dataalta"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Date"
      ColumnType="DATE"
      AliasName="DATAALTA"
      Expression="DATAALTA"
      SQLType="DATE" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="7" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Motivoalta"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="130"
      Type="java.lang.String"
      ColumnType="VARCHAR2"
      AliasName="MOTIVOALTA"
      Expression="MOTIVOALTA"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="130" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="IduIdentUtId"
      IsUpdateable="false"
      IsPersistent="false"
      IsNotNull="true"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="IDU_IDENT_UT_ID"
      Expression="IDU_IDENT_UT_ID"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Anterioridclassifdoenca"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="ANTERIORIDCLASSIFDOENCA"
      Expression="ANTERIORIDCLASSIFDOENCA"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Idcodassistenciafamiliar"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="IDCODASSISTENCIAFAMILIAR"
      Expression="IDCODASSISTENCIAFAMILIAR"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Anterioridparentesco"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="ANTERIORIDPARENTESCO"
      Expression="ANTERIORIDPARENTESCO"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Anteriornomefamiliar"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="100"
      Type="java.lang.String"
      ColumnType="VARCHAR2"
      AliasName="ANTERIORNOMEFAMILIAR"
      Expression="ANTERIORNOMEFAMILIAR"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="100" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Idlastitembaixa"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="IDLASTITEMBAIXA"
      Expression="IDLASTITEMBAIXA"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Histid"
      IsUpdateable="false"
      IsPersistent="false"
      Type="oracle.jbo.domain.Number"
      ColumnType="NUMBER"
      AliasName="HISTID"
      Expression="HISTID"
      SQLType="NUMERIC" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="22" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Codigoentidadepub"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="50"
      Type="java.lang.String"
      ColumnType="VARCHAR2"
      AliasName="CODIGOENTIDADEPUB"
      Expression="CODIGOENTIDADEPUB"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="50" />
      </DesignTime>
   </ViewAttribute>
   <ViewAttribute
      Name="Estado"
      IsUpdateable="false"
      IsPersistent="false"
      Precision="1"
      Type="java.lang.String"
      ColumnType="CHAR"
      AliasName="ESTADO"
      Expression="ESTADO"
      SQLType="VARCHAR" >
      <DesignTime>
         <Attr Name="_DisplaySize" Value="1" />
      </DesignTime>
   </ViewAttribute>
</ViewObject>
