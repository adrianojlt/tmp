// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.1.0, build 061008.0900.00025)

package ora.pt.cons.igif.services.proxy.federacao.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.client.ServiceExceptionImpl;
import oracle.j2ee.ws.common.util.exception.*;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.client.HandlerChainImpl;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.rpc.handler.HandlerChain;
import javax.xml.rpc.handler.HandlerInfo;
import javax.xml.namespace.QName;

public class IDFedValidateWellKnownFactsResponseService_Impl extends oracle.j2ee.ws.client.BasicService implements ora.pt.cons.igif.services.proxy.federacao.IDFedValidateWellKnownFactsResponseService {
    private static final QName serviceName = new QName("http://dynamicgateway.fsc.pt.gov.interop/", "IDFedValidateWellKnownFactsResponseService");
    private static final QName ns1_IDFedValidateWellKnownFactsResponsePort_QNAME = new QName("http://dynamicgateway.fsc.pt.gov.interop/", "IDFedValidateWellKnownFactsResponsePort");
    private static final Class IDFedValidateWellKnownFactsResponseType_PortClass = ora.pt.cons.igif.services.proxy.federacao.IDFedValidateWellKnownFactsResponseType.class;
    
    public IDFedValidateWellKnownFactsResponseService_Impl() {
        super(serviceName, new QName[] {
                        ns1_IDFedValidateWellKnownFactsResponsePort_QNAME
                    },
            new ora.pt.cons.igif.services.proxy.federacao.runtime.IDFedValidateWellKnownFactsResponseService_SerializerRegistry().getRegistry());
        
    }
    
    public java.rmi.Remote getPort(QName portName, Class serviceDefInterface) throws javax.xml.rpc.ServiceException {
        try {
            if (portName.equals(ns1_IDFedValidateWellKnownFactsResponsePort_QNAME) &&
                serviceDefInterface.equals(IDFedValidateWellKnownFactsResponseType_PortClass)) {
                return getIDFedValidateWellKnownFactsResponsePort();
            }
        } catch (Exception e) {
            throw new ServiceExceptionImpl(new LocalizableExceptionAdapter(e));
        }
        return super.getPort(portName, serviceDefInterface);
    }
    
    public java.rmi.Remote getPort(Class serviceDefInterface) throws javax.xml.rpc.ServiceException {
        try {
            if (serviceDefInterface.equals(IDFedValidateWellKnownFactsResponseType_PortClass)) {
                return getIDFedValidateWellKnownFactsResponsePort();
            }
        } catch (Exception e) {
            throw new ServiceExceptionImpl(new LocalizableExceptionAdapter(e));
        }
        return super.getPort(serviceDefInterface);
    }
    
    public ora.pt.cons.igif.services.proxy.federacao.IDFedValidateWellKnownFactsResponseType getIDFedValidateWellKnownFactsResponsePort() {
        String[] roles = new String[] {};
        HandlerChainImpl handlerChain = new HandlerChainImpl(getHandlerRegistry().getHandlerChain(ns1_IDFedValidateWellKnownFactsResponsePort_QNAME));
        handlerChain.setRoles(roles);
        ora.pt.cons.igif.services.proxy.federacao.runtime.IDFedValidateWellKnownFactsResponsePortBinding_Stub stub = new ora.pt.cons.igif.services.proxy.federacao.runtime.IDFedValidateWellKnownFactsResponsePortBinding_Stub(handlerChain);
        try {
            stub._initialize(super.internalTypeRegistry);
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            throw new JAXRPCException(e.getMessage(), e);
        }
        return stub;
    }
}
